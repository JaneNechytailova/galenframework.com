--------------------------------
title
   Released version 2.1. Spec "count" and heatmap
--------------------------------
date
   2015-09-20 14:22
--------------------------------
allowComments
   true
--------------------------------
categories
   
================================

Greetings! The version 2.1 is live with the following major features:

* "Spec 'count' for validating the amount of specific objects on page":/post/2015-09-20-released-version-2.1.-spec-count-and-heatmap/#Speccountforvalidatingtheamountofspecificobjectsonpage
* "Heatmap for layout reports in html report":/post/2015-09-20-released-version-2.1.-spec-count-and-heatmap/#Heatmapforlayoutreportsinhtmlreport
* "Custom information table in html report":/post/2015-09-20-released-version-2.1.-spec-count-and-heatmap/#Custominformationtableinhtmlreport


>>>>

h2. Spec 'count' for validating the amount of specific objects on page

From now on you can verify the amount of objects on the page with advanced expressions using @"count":/docs/reference-galen-spec-language-guide/#Count@ spec. Here is an example how to verify that there should be exactly 5 objects matching expression @menu-item-*@:

$$ galen-specs
= Main section = 
    global:
        count any "menu-item-*" is 5
$$

You can also use less strict validation with range of values

$$ galen-specs
= Main section = 
    global:
        count any "menu-item-*" is 5 to 8
$$

The above expressions will count all item on page that match the specified expression. But in case you want to count only visible elements on page you can do it like this:

$$ galen-specs
= Main section = 
    global:
        count visible "menu-item-*" is 5
$$

The object @global@ in this case is used because spec count is not tied to a specific element on page. 



h2. Heatmap for layout reports in html report

When running layout tests it might be handy to see which areas on the page a left with minimal validations or not covered at all. Since version 2.1 each layout report has a *Heat map* link. If you click this link it will give you an overview of your layout validations. Here is an example:

!files/heatmap.png!



h2. Custom information table in html report 

When working with Galen structured reports you can add a hidden data for debugging purposes. This is called *extras*. Here is an example in JavaScript tests:

$$ javascript
// ...
  this.report.info("Some info")
    .withExtrasText("Device name", "iPhone")
    .withExtrasLink("Page url", driver.getCurrentUrl())
    .withExtrasImage("Screenshot", takeScreenshot(driver));
// ...
$$

And here is how this will be rendered in Html report:

!files/extras.png!
