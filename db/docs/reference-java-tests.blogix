--------------------------------
title
   Java Tests
--------------------------------
date
   2014-08-09 10:47
--------------------------------
allowComments
   true
--------------------------------
categories
   
================================

Since version 1.2 Galen introduced an improved Java API allowing you to perform layout testing in you Java Selenium Tests.

h2. Maven dependency

If you are using Maven you can add a following dependency in your pom.xml 
$$ xml
<dependencies>

    ...

    <dependency>
        <groupId>net.mindengine</groupId>
        <artifactId>galen</artifactId>
        <version>1.2</version>
    </dependency>
    
    ...

</dependencies>
$$


h2. Simplest usage

$$ java
import net.mindengine.galen.api.Galen;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.testng.annotations.Test;

public class MyTest {

    @Test
    public void loginPageShouldLookGood_onMobileDevice() {
        WebDriver driver = new FirefoxDriver();
        driver.get("http://testapp.galenframework.com");
        driver.manage().setSize(new Dimension(400, 500));

        LayoutReport layoutReport = 
            Galen.checkLayout(driver, "specs/loginPage.spec", 
            Arrays.asList("mobile"), null, null, null);

        if (layoutReport.errors() > 0) {
            throw new RuntimeException("Page layout has errors");
        }
    }
}
$$


h2. Html reports

It is also possible to save your layout tests into a separate html report in a same way it is generated during regular Galen tests.


$$ java
import net.mindengine.galen.reports.GalenTestInfo;
import net.mindengine.galen.reports.TestReport;
import net.mindengine.galen.reports.model.LayoutReport;
import net.mindengine.galen.reports.HtmlReportBuilder;

public class MyTest {
    @Test
    public void loginPageShouldLookGood_onMobileDevice() {
        // ....

        // Executing layout check and obtaining the layout report
        LayoutReport layoutReport = 
            Galen.checkLayout(driver, "specs/loginPage.spec", 
            Arrays.asList("mobile"), null, null, null);

        // Creating a list of tests
        List<GalenTestInfo> tests = new LinkedList<GalebTestInfo>();

        // Creating an object that will contain the information about the test
        GalenTestInfo test = GalenTestInfo.fromString("Login page on mobile device test");

        // Adding layout report to the test report
        test.getReport().layout(layoutReport, "check layout on mobile device");
        tests.add(test);


        // Exporting all test reports to html
        new HtmlReportBuilder().build(tests, "target/galen-html-reports");
    }
}
$$


